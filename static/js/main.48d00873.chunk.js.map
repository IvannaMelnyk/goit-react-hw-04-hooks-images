{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/Loader/Loader.jsx","services/galery-api.js","components/Button/Button.jsx","components/Modal/Modal.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/EmptyField/EmptyField.jsx","components/FetchImages/FetchImages.jsx","App.js","index.js"],"names":["Searchbar","onSubmit","useState","requestKey","setRequestKey","className","event","preventDefault","trim","toast","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","Spinner","color","height","width","Component","API","fetchImages","query","page","URL","fetch","then","response","ok","json","Promise","reject","Error","data","console","log","hits","Button","onClick","this","props","modalRoot","document","querySelector","Modal","useEffect","handleKeyDown","code","onClose","window","addEventListener","removeEventListener","createPortal","target","src","alt","ImageGalleryItem","largeImageURL","showModal","setShowModal","toggleModal","ImageGallery","images","map","image","index","webformatURL","tags","EmptyField","texterror","role","style","textAlign","Status","ImageGalleryInfo","setImages","status","setStatus","error","setError","setPage","fetchImgGallery","newQuery","newImages","prevImages","scrollPageToBottom","length","catch","scrollTo","left","top","body","scrollHeight","behavior","message","App","setQuery","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.48d00873.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport PropTypes from 'prop-types';\n\nexport default function Searchbar({ onSubmit }) {\n  const [requestKey, setRequestKey] = useState('');\n\n  const handleRequestChange = event => {\n    setRequestKey(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (requestKey.trim() === '') {\n      toast('Введите запрос.');\n      return;\n    }\n\n    onSubmit(requestKey);\n    setRequestKey('');\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={requestKey}\n          onChange={handleRequestChange}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport Loader from 'react-loader-spinner';\n\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport default class Spinner extends Component {\n  render() {\n    return (\n      <Loader\n        className=\"Loader\"\n        type=\"Puff\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n      />\n    );\n  }\n}\n","function fetchImages(query, page) {\n  const API_KEY = '19123661-7bcff1088ecd25ea1b8bca82a';\n  const URL = `https://pixabay.com/api/?q=${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n  return fetch(URL)\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error(`Something went wrong.Try again.`));\n    })\n    .then(data => {\n      console.log(data);\n      return data.hits;\n    });\n}\n\nconst API = { fetchImages };\nexport default API;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Button extends Component {\n  static propTypes = {\n    onClick: PropTypes.func.isRequired,\n  };\n\n  render() {\n    return (\n      <div className=\"Loader-button\">\n        <button className=\"Button\" type=\"button\" onClick={this.props.onClick}>\n          Load More\n        </button>\n      </div>\n    );\n  }\n}\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal(props) {\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.code === 'Escape') {\n        props.onClose();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  });\n\n  const handleBackdropClick = event => {\n    if (event.target !== event.currentTarget) {\n      props.onClose();\n    }\n  };\n\n  return createPortal(\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\n      <div className=\"Modal\">\n        <img src={props.src} alt={props.alt} width={900}></img>\n      </div>\n    </div>,\n    modalRoot,\n  );\n}\n\nModal.propTypes = {\n  alt: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n  src: PropTypes.string.isRequired,\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from '../Modal';\n\nexport default function ImageGalleryItem({ src, alt, largeImageURL }) {\n  const [showModal, setShowModal] = useState(null);\n\n  const toggleModal = () => {\n    setShowModal(showModal => !showModal);\n  };\n\n  return (\n    <li className=\"ImageGalleryItem\" onClick={toggleModal}>\n      <img src={src} alt={alt} className=\"ImageGalleryItem-image\" />\n      {showModal && (\n        <Modal onClose={toggleModal} src={largeImageURL} alt={alt} />\n      )}\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n};\n","import ImageGalleryItem from '../ImageGalleryItem';\nimport PropTypes from 'prop-types';\n\nconst ImageGallery = ({ images }) => {\n  return (\n    <>\n      <ul className=\"ImageGallery\">\n        {images.map((image, index) => (\n          <ImageGalleryItem\n            src={image.webformatURL}\n            alt={image.tags}\n            largeImageURL={image.largeImageURL}\n            key={index}\n          />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n};\n\nexport default ImageGallery;\n","export default function EmptyField({ texterror }) {\n  return (\n    <div role=\"alert\" style={{ textAlign: 'center' }}>\n      <p>We're sorry but something went wrong {texterror}</p>\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport Spinner from '../Loader';\nimport API from '../../services/galery-api';\nimport Button from '../Button';\nimport ImageGallery from '../ImageGallery';\nimport EmptyField from '../EmptyField';\nimport PropTypes from 'prop-types';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default function ImageGalleryInfo({ query }) {\n  const [images, setImages] = useState([]);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    setStatus(Status.PENDING);\n    fetchImgGallery();\n    setStatus(Status.RESOLVED);\n    // eslint-disable-next-line\n  }, [query, page]);\n\n  useEffect(() => {\n    const resetPage = newQuery => {\n      if (newQuery !== query) {\n        setPage(1);\n        setImages([]);\n      }\n    };\n    resetPage();\n  }, [query]);\n\n  const fetchImgGallery = () => {\n    API.fetchImages(query, page)\n      .then(newImages => {\n        setImages(prevImages => [...prevImages, ...newImages]);\n        scrollPageToBottom();\n        if (newImages.length === 0) {\n          throw new Error('Hmm...Nothing here. Try another search.');\n        }\n      })\n      .catch(error => {\n        setError(error);\n        setStatus(Status.REJECTED);\n      });\n  };\n\n  const scrollPageToBottom = () => {\n    if (page !== 1) {\n      window.scrollTo({\n        left: 0,\n        top: document.body.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  };\n\n  const onLoadMore = () => {\n    setPage(page => page + 1);\n  };\n\n  if (status === Status.IDLE) {\n    return (\n      <div style={{ textAlign: 'center' }}>\n        Please enter a search term to begin your search...\n      </div>\n    );\n  }\n\n  if (status === Status.PENDING) {\n    return <Spinner />;\n  }\n\n  if (status === Status.REJECTED) {\n    return <EmptyField message={error.message} />;\n  }\n\n  if (status === Status.RESOLVED) {\n    return (\n      <>\n        <ImageGallery images={images} />\n        {images.length !== 0 && <Button onClick={onLoadMore} />}\n      </>\n    );\n  }\n}\nImageGalleryInfo.propTypes = {\n  query: PropTypes.string.isRequired,\n};\n","import { useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Searchbar from './components/Searchbar';\nimport FetchImages from './components/FetchImages';\n\nexport default function App() {\n  const [query, setQuery] = useState('');\n\n  const handleFormSubmit = query => {\n    setQuery(query);\n  };\n\n  return (\n    <div>\n      <Searchbar onSubmit={handleFormSubmit} />\n      <ToastContainer autoClose={3000} />\n      <FetchImages query={query} />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}